import { useState } from "react"; import { Card, CardContent } from "@/components/ui/card"; import { Input } from "@/components/ui/input"; import { Label } from "@/components/ui/label"; import { Button } from "@/components/ui/button"; import { Textarea } from "@/components/ui/textarea"; export default function MachiningQuoteTool() { const [inputs, setInputs] = useState({quantity: 1, setupTime: 0, roughDiameter: 0, roughLength: 0, roughDOC: 0.1, roughFeed: 0.01, threadingTime: 0, finishingTime: 0, groovingTime: 0, deburrTime: 0, loadUnloadTime: 0, specialToolingCost: 0,}); const handleChange = (e) => { setInputs({...inputs, [e.target.name]: parseFloat(e.target.value) || 0}); }; const roughingTime = (inputs.roughDiameter * Math.PI * inputs.roughLength) / (inputs.roughDOC * inputs.roughFeed || 1); const totalCycleTime = roughingTime + inputs.threadingTime + inputs.finishingTime + inputs.groovingTime + inputs.deburrTime + inputs.loadUnloadTime; const totalRunTime = totalCycleTime * inputs.quantity; const totalTime = inputs.setupTime + totalRunTime; const output = `QUOTING SUMMARY: --------------------- Quantity: ${inputs.quantity} Setup Time: ${inputs.setupTime.toFixed(2)} min Roughing Time: ${roughingTime.toFixed(2)} min Threading Time: ${inputs.threadingTime.toFixed(2)} min Finishing Time: ${inputs.finishingTime.toFixed(2)} min Grooving Time: ${inputs.groovingTime.toFixed(2)} min Deburr Time: ${inputs.deburrTime.toFixed(2)} min Load/Unload Time: ${inputs.loadUnloadTime.toFixed(2)} min Cycle Time (per part): ${totalCycleTime.toFixed(2)} min Total Run Time: ${totalRunTime.toFixed(2)} min Special Tooling Cost: $${inputs.specialToolingCost.toFixed(2)} TOTAL TIME ESTIMATE: ${totalTime.toFixed(2)} min`; return (<div className="p-4 max-w-4xl mx-auto space-y-6"><h1 className="text-2xl font-bold">Machining Job Quote Tool</h1><Card><CardContent className="grid grid-cols-2 gap-4 p-4"><div><Label>Quantity</Label><Input type="number" name="quantity" value={inputs.quantity} onChange={handleChange} /></div><div><Label>Setup Time (min)</Label><Input type="number" name="setupTime" value={inputs.setupTime} onChange={handleChange} /></div><div><Label>Roughing - Diameter (in)</Label><Input type="number" name="roughDiameter" value={inputs.roughDiameter} onChange={handleChange} /></div><div><Label>Roughing - Length (in)</Label><Input type="number" name="roughLength" value={inputs.roughLength} onChange={handleChange} /></div><div><Label>Roughing - DOC (in)</Label><Input type="number" name="roughDOC" value={inputs.roughDOC} onChange={handleChange} step="0.01" /></div><div><Label>Roughing - Feed Rate (in/rev)</Label><Input type="number" name="roughFeed" value={inputs.roughFeed} onChange={handleChange} step="0.001" /></div><div><Label>Threading Time (min)</Label><Input type="number" name="threadingTime" value={inputs.threadingTime} onChange={handleChange} /></div><div><Label>Finishing Time (min)</Label><Input type="number" name="finishingTime" value={inputs.finishingTime} onChange={handleChange} /></div><div><Label>Grooving Time (min)</Label><Input type="number" name="groovingTime" value={inputs.groovingTime} onChange={handleChange} /></div><div><Label>Deburr Time (min)</Label><Input type="number" name="deburrTime" value={inputs.deburrTime} onChange={handleChange} /></div><div><Label>Load/Unload Time (min)</Label><Input type="number" name="loadUnloadTime" value={inputs.loadUnloadTime} onChange={handleChange} /></div><div><Label>Special Tooling Cost ($)</Label><Input type="number" name="specialToolingCost" value={inputs.specialToolingCost} onChange={handleChange} /></div></CardContent></Card><div><Label>Estimate Summary</Label><Textarea className="w-full h-80 font-mono" value={output} readOnly /></div></div>); }